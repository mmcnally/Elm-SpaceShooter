Elm.GameAI = Elm.GameAI || {};
Elm.GameAI.make = function (_elm) {
   "use strict";
   _elm.GameAI = _elm.GameAI || {};
   if (_elm.GameAI.values)
   return _elm.GameAI.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _A = _N.Array.make(_elm),
   _E = _N.Error.make(_elm),
   $moduleName = "GameAI";
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Enemy = Elm.Enemy.make(_elm);
   var GameState = Elm.GameState.make(_elm);
   var Generator = Elm.Generator.make(_elm);
   var Generator = Generator || {};
   Generator.Standard = Elm.Generator.Standard.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Json = Elm.Native.Json.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Ship = Elm.Ship.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var _op = {};
   var seed = function (state) {
      return Basics.floor((state.ship.x + 0.7) * 345.0 + (state.ship.y + 8.4) * 837.0);
   };
   var randomNum = function (state) {
      return Basics.fst(Generator.$float(Generator.Standard.generator(seed(state))));
   };
   var addEnemy = function (state) {
      return _U.cmp(List.length(state.enemies),
      20) < 0 ? {ctor: "::"
                ,_0: _U.replace([["x"
                                 ,List.head(state.enemies).x * 1.5]
                                ,["y"
                                 ,List.head(state.enemies).y + 100]
                                ,["speed",randomNum(state)]
                                ,["intel",50]],
                Enemy.enemy)
                ,_1: state.enemies} : state.enemies;
   };
   var updateState = function (state) {
      return _U.replace([["enemies"
                         ,addEnemy(state)]],
      state);
   };
   _elm.GameAI.values = {_op: _op
                        ,updateState: updateState
                        ,addEnemy: addEnemy
                        ,randomNum: randomNum
                        ,seed: seed};
   return _elm.GameAI.values;
};